name: Build

on:
  push:
    branches-ignore:
      - "gh-pages"
    paths-ignore:
      - ".github/workflows/**"
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
        type: choice
        options:
          - info
          - warning
          - debug
jobs:
  cloc:
    name: CLOC
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install CLOC
        run: |
          sudo apt-get update
          sudo apt-get -y install cloc

      - name: Count lines of code
        run: cloc --include-lang C# --vcs git

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Verify Format
        run: dotnet format --verify-no-changes

  testing:
    name: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Set up dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Print environment
        run: |
          whoami
          dotnet --info
          nuget help | grep Version
          echo "Github ref: $GITHUB_REF"
          echo "Github event: $GITHUB_EVENT"

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Restore dependencies
        run: dotnet restore --locked-mode

      - name: Build solution
        run: dotnet build SimpleRedirects.sln --configuration Debug

      - name: Run tests
        run: dotnet test SimpleRedirects.sln --configuration Debug --logger "trx;LogFileName=sr-test-results.trx"

      - name: Report test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Test Results
          path: "**/*-test-results.trx"
          reporter: dotnet-trx
          fail-on-error: true
          list-suites: "all"
          list-tests: "all"
          max-annotations: "10"

  build-artifacts:
    name: Build artifacts
    runs-on: ubuntu-latest
    needs: [lint, testing]
    strategy:
      fail-fast: false
      matrix:
        include:
          - project_name: Web
            base_path: ./src
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Print environment
        run: |
          whoami
          dotnet --info
          nuget help | grep Version
          echo "Github ref: $GITHUB_REF"
          echo "Github event: $GITHUB_EVENT"

      - name: Restore / Clean project
        working-directory: ${{ matrix.base_path }}/${{ matrix.project_name }}
        run: |
          echo "Restore"
          dotnet restore
          echo "Clean"
          dotnet clean --configuration Release -o obj/build-output/publish

      - name: Publish project
        working-directory: ${{ matrix.base_path }}/${{ matrix.project_name }}
        run: |
          echo "Publish"
          dotnet publish --configuration Release -o obj/build-output/publish

          cd obj/build-output/publish
          zip -r ${{ matrix.project_name }}.zip .
          mv ${{ matrix.project_name }}.zip ../../../

          pwd
          ls -atlh ../../../

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.project_name }}.zip
          path: ${{ matrix.base_path }}/${{ matrix.project_name }}/${{ matrix.project_name }}.zip
          if-no-files-found: error

  check-failures:
    name: Check for failures
    if: always()
    runs-on: ubuntu-latest
    needs:
      - cloc
      - lint
      - testing
      - build-artifacts
    steps:
      - name: Print environment
        run: |
          echo "Github ref: $GITHUB_REF"
          echo "Github event: $GITHUB_EVENT"

      - name: Check if any job failed
        if: |
          github.ref == 'refs/heads/main'
          || github.ref == 'refs/heads/rc'
          || github.ref == 'refs/heads/hotfix-rc'
        env:
          CLOC_STATUS: ${{ needs.cloc.result }}
          LINT_STATUS: ${{ needs.lint.result }}
          TESTING_STATUS: ${{ needs.testing.result }}
          BUILD_ARTIFACTS_STATUS: ${{ needs.build-artifacts.result }}
        run: |
          if [ "$CLOC_STATUS" == "failure" ]; then
            echo "CLOC failed"
            exit 1
          elif [ "$LINT_STATUS" == "failure" ]; then
            echo "Lint failed"
            exit 1
          elif [ "$TESTING_STATUS" == "failure" ]; then
            echo "Testing failed"
            exit 1
          elif [ "$BUILD_ARTIFACTS_STATUS" == "failure" ]; then
            echo "Build artifacts failed"
            exit 1
          fi
      - name: Notify Teams on Failure
        uses: dhollerbach/actions.send-message-to-ms-teams@1.0.10
        if: failure()
        with:
          webhook: ${{ secrets.TEAMS_WEBHOOK_URL }}
          message: "${{ github.repository }} - Build Failure. Link: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
